{"version":3,"sources":["components/Home/Resume.jpg","components/Home/Resume.pdf","components/Home/Panel.jsx","imgs/Project-1-Preview.png","imgs/Project-2-Preview.png","imgs/Project-3-Preview.png","components/Home/Projects.jsx","components/Simon Game/sounds/blue.mp3","components/Simon Game/sounds/green.mp3","components/Simon Game/sounds/red.mp3","components/Simon Game/sounds/wrong.mp3","components/Simon Game/sounds/yellow.mp3","components/Simon Game/SimonApp.jsx","components/MuiTheme.jsx","components/App.jsx","index.js"],"names":["makeStyles","theme","root","color","fontWeight","textAlign","marginLeft","width","a","textDecoration","fontSize","list","listStyle","paper","padding","spacing","height","palette","text","secondary","boxShadow","SimonApp","Theme","createMuiTheme","props","MuiButtonBase","disableRipple","primary","main","dark","light","App","console","log","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"8PAAe,ICAA,I,iECKGA,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,QACPC,WAAY,OACZC,UAAW,OACXC,WAAY,MACZC,MAAO,QAETC,EAAG,CACDC,eAAgB,OAChBF,MAAO,OACPJ,MAAO,QACPO,SAAU,QAEZC,KAAM,CACJD,SAAU,SACVN,WAAY,MACZK,eAAgB,OAChBG,UAAW,Y,oCCvBA,ICAA,ICAA,ICSGZ,KAAW,SAACC,GAAD,MAAY,CACvCY,MAAO,CACLC,QAASb,EAAMc,QAAQ,GACvBV,UAAW,SACXW,OAAQ,OACRb,MAAOF,EAAMgB,QAAQC,KAAKC,UAC1BC,UACE,wE,+FChBS,ICAA,ICAA,ICAA,ICAA,IC+HAC,I,SC5GAC,EAjBDC,YAAe,CAC3BC,MAAO,CAELC,cAAe,CAEbC,eAAe,IAGnBT,QAAS,CACPU,QAAS,CACPC,KAAM,UACNC,KAAM,UACNC,MAAO,c,SCYEC,MAjBf,WAEE,OADAC,QAAQC,IAAI,kBAEV,kBAACC,EAAA,EAAD,CAAejC,MAAOqB,GACpB,oCCTNa,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.825ade0c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Resume.df006d7d.jpg\";","export default __webpack_public_path__ + \"static/media/Resume.e1bbcaba.pdf\";","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ProjectLink from \"./ProjectLink\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"left\",\r\n    marginLeft: \"10%\",\r\n    width: \"100%\",\r\n  },\r\n  a: {\r\n    textDecoration: \"none\",\r\n    width: \"100%\",\r\n    color: \"black\",\r\n    fontSize: \"2rem\",\r\n  },\r\n  list: {\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"700\",\r\n    textDecoration: \"none\",\r\n    listStyle: \"none\",\r\n  },\r\n}));\r\n\r\nexport default function ProjectPanel(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Link to={props.live} className={classes.a}>\r\n        <img className={classes.a} src={props.img} alt={\"Project Preview\"} />\r\n        <span className=\"project-heading\">{props.name}</span>\r\n      </Link>\r\n      <ProjectLink live={props.live} src={props.src} />\r\n      <ul className={classes.list}>\r\n        {props.languages !== undefined\r\n          ? props.languages.map((language, index) => {\r\n              return <li key={index}>{language}</li>;\r\n            })\r\n          : null}\r\n        <li>React</li>\r\n        <li>Javascript</li>\r\n        <li>HTML</li>\r\n        <li>CSS</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Project-1-Preview.f8f0f78a.png\";","export default __webpack_public_path__ + \"static/media/Project-2-Preview.a4bc2ae8.png\";","export default __webpack_public_path__ + \"static/media/Project-3-Preview.9b71afd8.png\";","import React from \"react\";\r\nimport Panel from \"./Panel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Project1Preview from \"../../imgs/Project-1-Preview.png\";\r\nimport Project2Preview from \"../../imgs/Project-2-Preview.png\";\r\nimport Project3Preview from \"../../imgs/Project-3-Preview.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    height: \"100%\",\r\n    color: theme.palette.text.secondary,\r\n    boxShadow:\r\n      \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\r\n  },\r\n}));\r\n\r\nconst Projects = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={5}>\r\n      <Grid item xs={12} sm={12} md={6} lg={4}>\r\n        <Paper className={classes.paper}>\r\n          <Panel\r\n            name=\"Note Keeper\"\r\n            img={Project2Preview}\r\n            live=\"/Notes\"\r\n            src=\"https://github.com/gerardo-j/keeper-react-app\"\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={6} lg={4}>\r\n        <Paper className={classes.paper}>\r\n          <Panel\r\n            name=\"Dice Game\"\r\n            img={Project1Preview}\r\n            live=\"/Dice\"\r\n            src=\"https://github.com/gerardo-j/dice-react-app\"\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={6} lg={4}>\r\n        <Paper className={classes.paper}>\r\n          <Panel\r\n            name=\"Simon\"\r\n            img={Project3Preview}\r\n            live=\"/Simon\"\r\n            src=\"https://github.com/gerardo-j/simon-react-app\"\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","export default __webpack_public_path__ + \"static/media/blue.0407f886.mp3\";","export default __webpack_public_path__ + \"static/media/green.bb7cfbf2.mp3\";","export default __webpack_public_path__ + \"static/media/red.cda1b21a.mp3\";","export default __webpack_public_path__ + \"static/media/wrong.09270cc3.mp3\";","export default __webpack_public_path__ + \"static/media/yellow.ea398e3e.mp3\";","import React, { useState } from 'react';\r\nimport GlobalHeading from '../GlobalHeading';\r\nimport useKey from './UseKey';\r\nimport $ from 'jquery';\r\nimport './SimonStyles.css'\r\nimport blueSound from \"./sounds/blue.mp3\";\r\nimport greenSound from \"./sounds/green.mp3\";\r\nimport redSound from \"./sounds/red.mp3\";\r\nimport wrongSound from \"./sounds/wrong.mp3\";\r\nimport yellowSound from \"./sounds/yellow.mp3\";\r\n\r\nlet buttonColors = [\"red\", \"blue\", \"green\", \"yellow\"];\r\nlet gamePattern = [];\r\nlet userClickedPattern = [];\r\nlet level = 0;\r\n\r\nfunction SimonApp() {\r\n    const [title, setTitle] = useState(\"Press A Key to Start\")\r\n    useKey(\"KeyA\", startSequence, level);\r\n\r\n\r\n    function startSequence() {\r\n        userClickedPattern = []\r\n        level++;\r\n        setTitle(\"Level \" + level);\r\n        let randomNumber = Math.floor(Math.random() * 4);\r\n        let randomChosenColor = buttonColors[randomNumber];\r\n        gamePattern.push(randomChosenColor)\r\n        playSound(randomChosenColor);\r\n        $(\"#\" + randomChosenColor).fadeOut(100).fadeIn(100);\r\n    }    \r\n    \r\n    function handleClick(event) {\r\n        const color = event.target.id;\r\n        userClickedPattern.push(color);\r\n        console.log(userClickedPattern);\r\n        playSound(color);\r\n        animatePress(color);\r\n        checkAnswer(userClickedPattern.length - 1);\r\n    }\r\n    \r\n    function checkAnswer(currentLevel) {\r\n        if(userClickedPattern[currentLevel] === gamePattern[currentLevel]) {\r\n            if(userClickedPattern.length === gamePattern.length) {\r\n                setTimeout(() => {\r\n                    nextSequence();\r\n                }, 1000);\r\n            }\r\n        } else {\r\n            startOver();\r\n        }\r\n    }\r\n\r\n    function nextSequence() {\r\n        userClickedPattern = []\r\n        level++;\r\n        setTitle(\"Level \" + level);\r\n        let randomNumber = Math.floor(Math.random() * 4);\r\n        let randomChosenColor = buttonColors[randomNumber];\r\n        gamePattern.push(randomChosenColor)\r\n        $(\"#\" + randomChosenColor).fadeOut(100).fadeIn(100);\r\n        playSound(randomChosenColor);\r\n    }\r\n\r\n    function startOver() {\r\n        playSound(\"wrong\");\r\n        $(\".simon-app-body\").addClass(\"simon-game-over\");\r\n        setTimeout(() => {\r\n            $(\".simon-app-body\").removeClass(\"simon-game-over\");\r\n        }, 100)\r\n        setTitle(\"Game Over, Press A to restart\")\r\n        level = 0;\r\n        gamePattern = [];\r\n        userClickedPattern = [];\r\n    }\r\n    \r\n    function playSound(name) {\r\n        var audio;\r\n        switch (name) {\r\n            case 'blue':\r\n                audio = new Audio(blueSound);\r\n                break;\r\n            case 'green':\r\n                audio = new Audio(greenSound);\r\n                break;\r\n            case 'yellow':\r\n                audio = new Audio(yellowSound);\r\n                break;\r\n            case 'red':\r\n                audio = new Audio(redSound);\r\n                break;\r\n            case 'wrong':\r\n                audio = new Audio(wrongSound);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        audio !== undefined ? audio.play() : console.log(\"No audio was set!\");\r\n    }\r\n    \r\n    function animatePress(currentColor) {\r\n        $(\".simon-\" + currentColor).addClass(\"simon-pressed\");\r\n        setTimeout(() => {\r\n            $(\".simon-\" + currentColor).removeClass(\"simon-pressed\")\r\n        }, 100)\r\n    }\r\n\r\n    return (\r\n        <div className=\"simon-app-body\">\r\n            <GlobalHeading/>\r\n            <h1 id=\"simon-level-title\">{title}</h1>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div type=\"button\" onClick={handleClick} id=\"green\" className=\"simon-btn simon-green\"></div>\r\n                    <div type=\"button\" onClick={handleClick} id=\"red\" className=\"simon-btn simon-red\"></div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div type=\"button\" onClick={handleClick} id=\"yellow\" className=\"simon-btn simon-yellow\"></div>\r\n                    <div type=\"button\" onClick={handleClick} id=\"blue\" className=\"simon-btn simon-blue\"></div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SimonApp;","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst Theme = createMuiTheme({\r\n  props: {\r\n    // Name of the component ⚛️\r\n    MuiButtonBase: {\r\n      // The properties to apply\r\n      disableRipple: true, // No more ripple, on the whole application 💣!\r\n    },\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: \"#000000\",\r\n      dark: \"#E4F9F5\",\r\n      light: \"#E4F9F5\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default Theme;\r\n","import React from \"react\";\r\nimport Home from \"./Home/Home\";\r\nimport NotesApp from \"./Note Keeper/src/components/NotesApp\";\r\nimport DiceApp from \"./Dice Game/DiceApp\";\r\nimport SimonApp from \"./Simon Game/SimonApp\";\r\nimport Theme from \"./MuiTheme\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  console.log(\"App has loaded\");\r\n  return (\r\n    <ThemeProvider theme={Theme}>\r\n      <h1>Hi</h1>\r\n      {/* <Router> */}\r\n      {/* <Switch> */}\r\n      {/* <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/Notes\" exact component={NotesApp} />\r\n        <Route path=\"/Dice\" exact component={DiceApp} />\r\n        <Route path=\"/Simon\" exact component={SimonApp} /> */}\r\n      {/* </Switch> */}\r\n      {/* </Router> */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}